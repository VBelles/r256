name: Windows

on:
  workflow_dispatch:
  push:
    paths:
      - 'src/**'
      - '.github/workflows/windows.yml'
  release:
    types: [published]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: windows-latest

    env:
      PROJECT_NAME: ${{ github.event.repository.name }}
      PROJECT_BUILD_PATH: "${{ github.event.repository.name }}\\build"
      PROJECT_RELEASE_PATH: ${{ github.event.repository.name }}_dev_win_x64

    steps:
    - name: Checkout this repo
      uses: actions/checkout@master
      with:
        path: ${{ env.PROJECT_NAME }}
      
    - name: Checkout raylib repo
      uses: actions/checkout@v3
      with:
        repository: raysan5/raylib
        path: raylib
        

    - name: Setup Environment
      run: | 
        mkdir ${{ env.PROJECT_RELEASE_PATH }}
        mkdir ${{ env.PROJECT_BUILD_PATH }}
        dir
      shell: cmd

    # Setup MSBuild.exe path if required
    - name: Setup MSBuild path
      uses: microsoft/setup-msbuild@v1.1

    - name: Build raylib Library + Product (VS2022 solution)
      run: |
        dir
        cd ${{ env.PROJECT_BUILD_PATH }}
        cmake -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release ..
        cmake --build .
        cd ..
      shell: cmd

    - name: Generate Artifacts
      run: |
        dir ${{ env.PROJECT_BUILD_PATH }}
        copy /Y ${{ env.PROJECT_BUILD_PATH }}\${{ env.PROJECT_NAME }}.exe ${{ env.PROJECT_RELEASE_PATH }}\${{ env.PROJECT_NAME }}.exe
        copy /Y ${{ env.PROJECT_NAME }}\README.md ${{ env.PROJECT_RELEASE_PATH }}\README.md
        copy /Y ${{ env.PROJECT_NAME }}\LICENSE ${{ env.PROJECT_RELEASE_PATH }}\LICENSE
        dir ${{ env.PROJECT_RELEASE_PATH }}
      shell: cmd

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.PROJECT_RELEASE_PATH }}
        path: ${{ env.PROJECT_RELEASE_PATH }}